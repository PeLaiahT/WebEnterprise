@model IEnumerable<WebEnterprise.Models.Idea>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<CustomUser> SignInManager
@{
	ViewData["Title"] = "GetIdea";
	Layout = "~/Views/Shared/_LayoutManager.cshtml";
}

<nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">

	<!-- Sidebar Toggle (Topbar) -->
	<button id="sidebarToggleTop" class="btn btn-link d-md-none rounded-circle mr-3">
		<i class="fa fa-bars"></i>
	</button>

	<!-- Topbar Search -->
	<form class="d-flex justify-content-center d-sm-inline-block form-inline mx-auto ml-md-8 w-50 navbar-search border1">
		<div class="input-group">
			<input type="text" class="form-control bg-light border-0 small" placeholder="Search for..."
				   aria-label="Search" aria-describedby="basic-addon2">
			<div class="input-group-append">
				<button class="btn btn-primary border1" type="button">
					<i class="fas fa-search fa-sm"></i>
				</button>
			</div>
		</div>

	</form>

	<!-- Topbar Navbar -->
	<ul class="navbar-nav">

		<!-- Nav Item - Search Dropdown (Visible Only XS) -->
		<li class="nav-item dropdown no-arrow d-sm-none">
			<a class="nav-link dropdown-toggle" href="#" id="searchDropdown" role="button"
			   data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
				<i class="fas fa-search fa-fw"></i>
			</a>
			<!-- Dropdown - Messages -->
			<div class="dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in"
				 aria-labelledby="searchDropdown">
				<form class="form-inline mr-auto w-100 navbar-search">
					<div class="input-group">
						<input type="text" class="form-control bg-light border-0 small"
							   placeholder="Search for..." aria-label="Search"
							   aria-describedby="basic-addon2">
						<div class="input-group-append">
							<button class="btn btn-primary" type="button">
								<i class="fas fa-search fa-sm"></i>
							</button>
						</div>
					</div>
				</form>
			</div>
		</li>



		<div class="topbar-divider d-none d-sm-block"></div>
		@if (SignInManager.IsSignedIn(User))
		{
			<li class="nav-item dropdown no-arrow">
				<a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button"
			   data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
					<span class="mr-2 d-none d-lg-inline text-gray-600 small">@User.Identity?.Name</span>
					<img class="img-profile rounded-circle"
					 src="~/Img/@ViewBag.image">
				</a>
				<!-- Dropdown - User Information -->
			<div class="dropdown-menu dropdown-menu-right shadow animated--grow-in"
				 aria-labelledby="userDropdown">
					<a class="dropdown-item" data-toggle="modal">
						<form class="form-inline" asp-area="Identity" asp-page="/Account/Logout">
							<button type="submit" class="dropdown-item" data-toggle="modal">Logout</button>
						</form>
					</a>
				</div>
			</li>
		}
	</ul>

</nav>
<div class="container-fluid w-75">
	<div class="card shadow mb-4">
		<div class="card-header py-3 d-flex justify-content-between align-items-center">
		<form asp-action="Export" method="post">
			<button class="btn-info" >
				<i class="fa-solid fa-arrow-down">Export</i>
			</button>
		</form>
			
			
		</div>
		@if (TempData["Error"] != null)
		{
			<p class="alert alert-danger" id="successMessage">@TempData["Error"]</p>
		}
		<div class="card-body">
			<div class="table-responsive">
				<table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
					<thead class="thead-dark">
						<tr>
							<th>
								@Html.DisplayNameFor(model => model.Title)
							</th>
							<th>
								@Html.DisplayNameFor(model => model.Content)
							</th>
							<th>
								@Html.DisplayNameFor(model => model.CreateAt)
							</th>
							<th>
								@Html.DisplayNameFor(model => model.FirstDate)
							</th>
							<th>
								@Html.DisplayNameFor(model => model.LastDate)
							</th>
							<th>
								@Html.DisplayNameFor(model => model.View)
							</th>
							<th>
								@Html.DisplayNameFor(model => model.Category)
							</th>
							<th>
								@Html.DisplayNameFor(model => model.Likecount)
							</th>


						</tr>
					</thead>

					<tbody>
						@foreach (var item in Model)
						{
							<tr>
								<td>
									@Html.DisplayFor(modelItem => item.Title)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.Content)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.CreateAt)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.FirstDate)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.LastDate)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.View)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.CategoryID)
								</td>
								<td>
									@Html.DisplayFor(modelItem => item.Likecount)
								</td>

							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
	</div>
</div>




